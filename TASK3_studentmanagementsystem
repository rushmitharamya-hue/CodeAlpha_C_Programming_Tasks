// CodeAlpha_Task3_StudentManagementSystem.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Student {
    int id;
    char name[50];
    int age;
    float marks;
};

void addStudent();
void displayStudents();
void searchStudent();
void updateStudent();
void deleteStudent();

int main() {
    int choice;

    while(1) {
        printf("\n===== STUDENT MANAGEMENT SYSTEM =====\n");
        printf("1. Add Student\n");
        printf("2. Display All Students\n");
        printf("3. Search Student\n");
        printf("4. Update Student\n");
        printf("5. Delete Student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: addStudent(); break;
            case 2: displayStudents(); break;
            case 3: searchStudent(); break;
            case 4: updateStudent(); break;
            case 5: deleteStudent(); break;
            case 6: exit(0);
            default: printf("Invalid choice!\n");
        }
    }
    return 0;
}

void addStudent() {
    struct Student s;
    FILE *fp = fopen("students.txt", "a");

    printf("Enter ID: ");
    scanf("%d", &s.id);
    printf("Enter Name: ");
    scanf("%s", s.name);
    printf("Enter Age: ");
    scanf("%d", &s.age);
    printf("Enter Marks: ");
    scanf("%f", &s.marks);

    fwrite(&s, sizeof(struct Student), 1, fp);
    fclose(fp);
    printf("Student record added successfully!\n");
}

void displayStudents() {
    struct Student s;
    FILE *fp = fopen("students.txt", "r");

    printf("\nID\tName\tAge\tMarks\n");
    printf("---------------------------------\n");
    while(fread(&s, sizeof(struct Student), 1, fp))
        printf("%d\t%s\t%d\t%.2f\n", s.id, s.name, s.age, s.marks);

    fclose(fp);
}

void searchStudent() {
    struct Student s;
    int id, found = 0;
    FILE *fp = fopen("students.txt", "r");

    printf("Enter ID to search: ");
    scanf("%d", &id);

    while(fread(&s, sizeof(struct Student), 1, fp)) {
        if(s.id == id) {
            printf("Record Found:\nID: %d\nName: %s\nAge: %d\nMarks: %.2f\n", s.id, s.name, s.age, s.marks);
            found = 1;
            break;
        }
    }
    if(!found) printf("No record found with ID %d\n", id);

    fclose(fp);
}

void updateStudent() {
    struct Student s;
    int id, found = 0;
    FILE *fp = fopen("students.txt", "r+");

    printf("Enter ID to update: ");
    scanf("%d", &id);

    while(fread(&s, sizeof(struct Student), 1, fp)) {
        if(s.id == id) {
            printf("Enter new Name, Age, Marks: ");
            scanf("%s %d %f", s.name, &s.age, &s.marks);
            fseek(fp, -sizeof(struct Student), SEEK_CUR);
            fwrite(&s, sizeof(struct Student), 1, fp);
            found = 1;
            printf("Record updated successfully!\n");
            break;
        }
    }
    if(!found) printf("No record found with ID %d\n", id);

    fclose(fp);
}

void deleteStudent() {
    struct Student s;
    int id, found = 0;
    FILE *fp = fopen("students.txt", "r");
    FILE *temp = fopen("temp.txt", "w");

    printf("Enter ID to delete: ");
    scanf("%d", &id);

    while(fread(&s, sizeof(struct Student), 1, fp)) {
        if(s.id != id)
            fwrite(&s, sizeof(struct Student), 1, temp);
        else
            found = 1;
    }
    fclose(fp);
    fclose(temp);
    remove("students.txt");
    rename("temp.txt", "students.txt");

    if(found) printf("Record deleted successfully!\n");
    else printf("No record found with ID %d\n", id);
}